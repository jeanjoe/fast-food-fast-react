// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test article component Matches the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <OrderHistory
    getOrderHistory={[MockFunction]}
    history={
      Object {
        "push": [MockFunction] {
          "calls": Array [
            Array [
              "/sign-in",
            ],
          ],
          "results": Array [
            Object {
              "isThrow": false,
              "value": undefined,
            },
          ],
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <Breadcrumb
          style={
            Object {
              "padding": "1em 0em",
            }
          }
        >
          <BreadcrumbSection
            as={[Function]}
            to="/"
          >
            Home
          </BreadcrumbSection>
          <BreadcrumbDivider>
            /
          </BreadcrumbDivider>
          <BreadcrumbSection
            as={[Function]}
            to="/menus"
          >
            Menu
          </BreadcrumbSection>
          <BreadcrumbDivider>
            /
          </BreadcrumbDivider>
          <BreadcrumbSection
            active={true}
          >
            Order History
          </BreadcrumbSection>
        </Breadcrumb>,
        "",
        <Alert
          message="You have no order History..."
          type="negative"
        />,
        <Alert
          message="We are fetching your order history...."
          type="positive"
        />,
      ],
      "style": Object {
        "padding": "1em 1em",
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <BreadcrumbSection
              as={[Function]}
              to="/"
            >
              Home
            </BreadcrumbSection>,
            <BreadcrumbDivider>
              /
            </BreadcrumbDivider>,
            <BreadcrumbSection
              as={[Function]}
              to="/menus"
            >
              Menu
            </BreadcrumbSection>,
            <BreadcrumbDivider>
              /
            </BreadcrumbDivider>,
            <BreadcrumbSection
              active={true}
            >
              Order History
            </BreadcrumbSection>,
          ],
          "style": Object {
            "padding": "1em 0em",
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "as": [Function],
              "children": "Home",
              "to": "/",
            },
            "ref": null,
            "rendered": "Home",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "/",
            },
            "ref": null,
            "rendered": "/",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "as": [Function],
              "children": "Menu",
              "to": "/menus",
            },
            "ref": null,
            "rendered": "Menu",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "/",
            },
            "ref": null,
            "rendered": "/",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "active": true,
              "children": "Order History",
            },
            "ref": null,
            "rendered": "Order History",
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "",
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "message": "You have no order History...",
          "type": "negative",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "message": "We are fetching your order history....",
          "type": "positive",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Breadcrumb
            style={
              Object {
                "padding": "1em 0em",
              }
            }
          >
            <BreadcrumbSection
              as={[Function]}
              to="/"
            >
              Home
            </BreadcrumbSection>
            <BreadcrumbDivider>
              /
            </BreadcrumbDivider>
            <BreadcrumbSection
              as={[Function]}
              to="/menus"
            >
              Menu
            </BreadcrumbSection>
            <BreadcrumbDivider>
              /
            </BreadcrumbDivider>
            <BreadcrumbSection
              active={true}
            >
              Order History
            </BreadcrumbSection>
          </Breadcrumb>,
          "",
          <Alert
            message="You have no order History..."
            type="negative"
          />,
          <Alert
            message="We are fetching your order history...."
            type="positive"
          />,
        ],
        "style": Object {
          "padding": "1em 1em",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <BreadcrumbSection
                as={[Function]}
                to="/"
              >
                Home
              </BreadcrumbSection>,
              <BreadcrumbDivider>
                /
              </BreadcrumbDivider>,
              <BreadcrumbSection
                as={[Function]}
                to="/menus"
              >
                Menu
              </BreadcrumbSection>,
              <BreadcrumbDivider>
                /
              </BreadcrumbDivider>,
              <BreadcrumbSection
                active={true}
              >
                Order History
              </BreadcrumbSection>,
            ],
            "style": Object {
              "padding": "1em 0em",
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "as": [Function],
                "children": "Home",
                "to": "/",
              },
              "ref": null,
              "rendered": "Home",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "/",
              },
              "ref": null,
              "rendered": "/",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "as": [Function],
                "children": "Menu",
                "to": "/menus",
              },
              "ref": null,
              "rendered": "Menu",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "/",
              },
              "ref": null,
              "rendered": "/",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "active": true,
                "children": "Order History",
              },
              "ref": null,
              "rendered": "Order History",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "message": "You have no order History...",
            "type": "negative",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "message": "We are fetching your order history....",
            "type": "positive",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
