// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test article component Matches the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SignInForm
    handleOnChange={[MockFunction]}
    handleSubmit={[MockFunction]}
    loading={true}
    loginError="Error"
    loginSuccess={null}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "as": "form",
      "children": Array [
        <Header
          as="h3"
          textAlign="center"
        >
          Sign in
        </Header>,
        <Alert
          type="negative"
        />,
        "",
        <FormField
          control={[Function]}
          label="Email"
          name="email"
          onChange={[MockFunction]}
          placeholder="login Email"
          type="email"
        />,
        <FormField
          control={[Function]}
          label="Password"
          name="password"
          onChange={[MockFunction]}
          placeholder="*******"
          type="password"
        />,
        <FormField
          style={
            Object {
              "margin": "1em 0em",
            }
          }
        >
          <Button
            as="button"
            color="red"
            fluid={true}
            type="submit"
          >
            <React.Fragment>
              <Icon
                as="i"
                loading={true}
                name="spinner"
              />
              Signing In...
            </React.Fragment>
          </Button>
        </FormField>,
      ],
      "onSubmit": [MockFunction],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "as": "h3",
          "children": "Sign in",
          "textAlign": "center",
        },
        "ref": null,
        "rendered": "Sign in",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "message": undefined,
          "type": "negative",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "",
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "control": [Function],
          "label": "Email",
          "name": "email",
          "onChange": [MockFunction],
          "placeholder": "login Email",
          "type": "email",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "control": [Function],
          "label": "Password",
          "name": "password",
          "onChange": [MockFunction],
          "placeholder": "*******",
          "type": "password",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <Button
            as="button"
            color="red"
            fluid={true}
            type="submit"
          >
            <React.Fragment>
              <Icon
                as="i"
                loading={true}
                name="spinner"
              />
              Signing In...
            </React.Fragment>
          </Button>,
          "style": Object {
            "margin": "1em 0em",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "as": "button",
            "children": <React.Fragment>
              <Icon
                as="i"
                loading={true}
                name="spinner"
              />
              Signing In...
            </React.Fragment>,
            "color": "red",
            "fluid": true,
            "type": "submit",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <Icon
                  as="i"
                  loading={true}
                  name="spinner"
                />,
                "Signing In...",
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "as": "i",
                  "loading": true,
                  "name": "spinner",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "Signing In...",
            ],
            "type": Symbol(react.fragment),
          },
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "as": "form",
        "children": Array [
          <Header
            as="h3"
            textAlign="center"
          >
            Sign in
          </Header>,
          <Alert
            type="negative"
          />,
          "",
          <FormField
            control={[Function]}
            label="Email"
            name="email"
            onChange={[MockFunction]}
            placeholder="login Email"
            type="email"
          />,
          <FormField
            control={[Function]}
            label="Password"
            name="password"
            onChange={[MockFunction]}
            placeholder="*******"
            type="password"
          />,
          <FormField
            style={
              Object {
                "margin": "1em 0em",
              }
            }
          >
            <Button
              as="button"
              color="red"
              fluid={true}
              type="submit"
            >
              <React.Fragment>
                <Icon
                  as="i"
                  loading={true}
                  name="spinner"
                />
                Signing In...
              </React.Fragment>
            </Button>
          </FormField>,
        ],
        "onSubmit": [MockFunction],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "h3",
            "children": "Sign in",
            "textAlign": "center",
          },
          "ref": null,
          "rendered": "Sign in",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "message": undefined,
            "type": "negative",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "control": [Function],
            "label": "Email",
            "name": "email",
            "onChange": [MockFunction],
            "placeholder": "login Email",
            "type": "email",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "control": [Function],
            "label": "Password",
            "name": "password",
            "onChange": [MockFunction],
            "placeholder": "*******",
            "type": "password",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Button
              as="button"
              color="red"
              fluid={true}
              type="submit"
            >
              <React.Fragment>
                <Icon
                  as="i"
                  loading={true}
                  name="spinner"
                />
                Signing In...
              </React.Fragment>
            </Button>,
            "style": Object {
              "margin": "1em 0em",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "as": "button",
              "children": <React.Fragment>
                <Icon
                  as="i"
                  loading={true}
                  name="spinner"
                />
                Signing In...
              </React.Fragment>,
              "color": "red",
              "fluid": true,
              "type": "submit",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <Icon
                    as="i"
                    loading={true}
                    name="spinner"
                  />,
                  "Signing In...",
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "as": "i",
                    "loading": true,
                    "name": "spinner",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "Signing In...",
              ],
              "type": Symbol(react.fragment),
            },
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
