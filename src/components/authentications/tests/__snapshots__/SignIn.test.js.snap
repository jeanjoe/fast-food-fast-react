// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test article component Matches the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SignIn
    error={Array []}
    loginUser={[MockFunction]}
    user={Array []}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <Grid
        centered={true}
        stackable={true}
      >
        <GridColumn
          width={6}
        >
          <Segment
            style={
              Object {
                "margin": "5em 0em",
              }
            }
          >
            <SignInForm
              handleOnChange={[Function]}
              handleSubmit={[Function]}
              loading={false}
              loginError={null}
            />
          </Segment>
        </GridColumn>
      </Grid>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "centered": true,
        "children": <GridColumn
          width={6}
        >
          <Segment
            style={
              Object {
                "margin": "5em 0em",
              }
            }
          >
            <SignInForm
              handleOnChange={[Function]}
              handleSubmit={[Function]}
              loading={false}
              loginError={null}
            />
          </Segment>
        </GridColumn>,
        "stackable": true,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <Segment
            style={
              Object {
                "margin": "5em 0em",
              }
            }
          >
            <SignInForm
              handleOnChange={[Function]}
              handleSubmit={[Function]}
              loading={false}
              loginError={null}
            />
          </Segment>,
          "width": 6,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <SignInForm
              handleOnChange={[Function]}
              handleSubmit={[Function]}
              loading={false}
              loginError={null}
            />,
            "style": Object {
              "margin": "5em 0em",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "handleOnChange": [Function],
              "handleSubmit": [Function],
              "loading": false,
              "loginError": null,
              "loginSuccess": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <Grid
          centered={true}
          stackable={true}
        >
          <GridColumn
            width={6}
          >
            <Segment
              style={
                Object {
                  "margin": "5em 0em",
                }
              }
            >
              <SignInForm
                handleOnChange={[Function]}
                handleSubmit={[Function]}
                loading={false}
                loginError={null}
              />
            </Segment>
          </GridColumn>
        </Grid>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "centered": true,
          "children": <GridColumn
            width={6}
          >
            <Segment
              style={
                Object {
                  "margin": "5em 0em",
                }
              }
            >
              <SignInForm
                handleOnChange={[Function]}
                handleSubmit={[Function]}
                loading={false}
                loginError={null}
              />
            </Segment>
          </GridColumn>,
          "stackable": true,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Segment
              style={
                Object {
                  "margin": "5em 0em",
                }
              }
            >
              <SignInForm
                handleOnChange={[Function]}
                handleSubmit={[Function]}
                loading={false}
                loginError={null}
              />
            </Segment>,
            "width": 6,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <SignInForm
                handleOnChange={[Function]}
                handleSubmit={[Function]}
                loading={false}
                loginError={null}
              />,
              "style": Object {
                "margin": "5em 0em",
              },
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "handleOnChange": [Function],
                "handleSubmit": [Function],
                "loading": false,
                "loginError": null,
                "loginSuccess": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
