// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test article component Matches the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <OrderHistoryItem
    order={
      Object {
        "description": "test description",
        "id": 1,
        "price": 1000,
        "quantity": 4,
        "title": "test title",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <ItemImage
          src="https://react.semantic-ui.com/images/wireframe/image.png"
        />,
        <ItemContent>
          <ItemHeader
            as="a"
          >
            test title
          </ItemHeader>
          <hr />
          <ItemMeta>
            <span
              className="cinema"
            >
              Fast Food Fast
            </span>
          </ItemMeta>
          <Grid>
            <GridColumn
              width={12}
            >
              <ItemDescription>
                test description
              </ItemDescription>
              <ItemExtra>
                <Label
                  color="red"
                >
                  1000
                   UGX
                </Label>
                <Label />
              </ItemExtra>
            </GridColumn>
            <GridColumn
              width={4}
            >
              <Label>
                Quantity: 
                4
              </Label>
              <Label>
                Price: 
                1000
              </Label>
              <Label>
                Total Amount: 
                4000
                 UGX
              </Label>
            </GridColumn>
          </Grid>
        </ItemContent>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "src": "https://react.semantic-ui.com/images/wireframe/image.png",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <ItemHeader
              as="a"
            >
              test title
            </ItemHeader>,
            <hr />,
            <ItemMeta>
              <span
                className="cinema"
              >
                Fast Food Fast
              </span>
            </ItemMeta>,
            <Grid>
              <GridColumn
                width={12}
              >
                <ItemDescription>
                  test description
                </ItemDescription>
                <ItemExtra>
                  <Label
                    color="red"
                  >
                    1000
                     UGX
                  </Label>
                  <Label />
                </ItemExtra>
              </GridColumn>
              <GridColumn
                width={4}
              >
                <Label>
                  Quantity: 
                  4
                </Label>
                <Label>
                  Price: 
                  1000
                </Label>
                <Label>
                  Total Amount: 
                  4000
                   UGX
                </Label>
              </GridColumn>
            </Grid>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": "a",
              "children": "test title",
            },
            "ref": null,
            "rendered": "test title",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "hr",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <span
                className="cinema"
              >
                Fast Food Fast
              </span>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Fast Food Fast",
                "className": "cinema",
              },
              "ref": null,
              "rendered": "Fast Food Fast",
              "type": "span",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <GridColumn
                  width={12}
                >
                  <ItemDescription>
                    test description
                  </ItemDescription>
                  <ItemExtra>
                    <Label
                      color="red"
                    >
                      1000
                       UGX
                    </Label>
                    <Label />
                  </ItemExtra>
                </GridColumn>,
                <GridColumn
                  width={4}
                >
                  <Label>
                    Quantity: 
                    4
                  </Label>
                  <Label>
                    Price: 
                    1000
                  </Label>
                  <Label>
                    Total Amount: 
                    4000
                     UGX
                  </Label>
                </GridColumn>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    <ItemDescription>
                      test description
                    </ItemDescription>,
                    <ItemExtra>
                      <Label
                        color="red"
                      >
                        1000
                         UGX
                      </Label>
                      <Label />
                    </ItemExtra>,
                  ],
                  "width": 12,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": "test description",
                    },
                    "ref": null,
                    "rendered": "test description",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": Array [
                        <Label
                          color="red"
                        >
                          1000
                           UGX
                        </Label>,
                        <Label />,
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": Array [
                            1000,
                            " UGX",
                          ],
                          "color": "red",
                        },
                        "ref": null,
                        "rendered": Array [
                          1000,
                          " UGX",
                        ],
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": undefined,
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    <Label>
                      Quantity: 
                      4
                    </Label>,
                    <Label>
                      Price: 
                      1000
                    </Label>,
                    <Label>
                      Total Amount: 
                      4000
                       UGX
                    </Label>,
                  ],
                  "width": 4,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        "Quantity: ",
                        4,
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      "Quantity: ",
                      4,
                    ],
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        "Price: ",
                        1000,
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      "Price: ",
                      1000,
                    ],
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        "Total Amount: ",
                        4000,
                        " UGX",
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      "Total Amount: ",
                      4000,
                      " UGX",
                    ],
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <ItemImage
            src="https://react.semantic-ui.com/images/wireframe/image.png"
          />,
          <ItemContent>
            <ItemHeader
              as="a"
            >
              test title
            </ItemHeader>
            <hr />
            <ItemMeta>
              <span
                className="cinema"
              >
                Fast Food Fast
              </span>
            </ItemMeta>
            <Grid>
              <GridColumn
                width={12}
              >
                <ItemDescription>
                  test description
                </ItemDescription>
                <ItemExtra>
                  <Label
                    color="red"
                  >
                    1000
                     UGX
                  </Label>
                  <Label />
                </ItemExtra>
              </GridColumn>
              <GridColumn
                width={4}
              >
                <Label>
                  Quantity: 
                  4
                </Label>
                <Label>
                  Price: 
                  1000
                </Label>
                <Label>
                  Total Amount: 
                  4000
                   UGX
                </Label>
              </GridColumn>
            </Grid>
          </ItemContent>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "src": "https://react.semantic-ui.com/images/wireframe/image.png",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <ItemHeader
                as="a"
              >
                test title
              </ItemHeader>,
              <hr />,
              <ItemMeta>
                <span
                  className="cinema"
                >
                  Fast Food Fast
                </span>
              </ItemMeta>,
              <Grid>
                <GridColumn
                  width={12}
                >
                  <ItemDescription>
                    test description
                  </ItemDescription>
                  <ItemExtra>
                    <Label
                      color="red"
                    >
                      1000
                       UGX
                    </Label>
                    <Label />
                  </ItemExtra>
                </GridColumn>
                <GridColumn
                  width={4}
                >
                  <Label>
                    Quantity: 
                    4
                  </Label>
                  <Label>
                    Price: 
                    1000
                  </Label>
                  <Label>
                    Total Amount: 
                    4000
                     UGX
                  </Label>
                </GridColumn>
              </Grid>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "a",
                "children": "test title",
              },
              "ref": null,
              "rendered": "test title",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "hr",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <span
                  className="cinema"
                >
                  Fast Food Fast
                </span>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Fast Food Fast",
                  "className": "cinema",
                },
                "ref": null,
                "rendered": "Fast Food Fast",
                "type": "span",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <GridColumn
                    width={12}
                  >
                    <ItemDescription>
                      test description
                    </ItemDescription>
                    <ItemExtra>
                      <Label
                        color="red"
                      >
                        1000
                         UGX
                      </Label>
                      <Label />
                    </ItemExtra>
                  </GridColumn>,
                  <GridColumn
                    width={4}
                  >
                    <Label>
                      Quantity: 
                      4
                    </Label>
                    <Label>
                      Price: 
                      1000
                    </Label>
                    <Label>
                      Total Amount: 
                      4000
                       UGX
                    </Label>
                  </GridColumn>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": Array [
                      <ItemDescription>
                        test description
                      </ItemDescription>,
                      <ItemExtra>
                        <Label
                          color="red"
                        >
                          1000
                           UGX
                        </Label>
                        <Label />
                      </ItemExtra>,
                    ],
                    "width": 12,
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": "test description",
                      },
                      "ref": null,
                      "rendered": "test description",
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": Array [
                          <Label
                            color="red"
                          >
                            1000
                             UGX
                          </Label>,
                          <Label />,
                        ],
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": Array [
                              1000,
                              " UGX",
                            ],
                            "color": "red",
                          },
                          "ref": null,
                          "rendered": Array [
                            1000,
                            " UGX",
                          ],
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": undefined,
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                      ],
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": Array [
                      <Label>
                        Quantity: 
                        4
                      </Label>,
                      <Label>
                        Price: 
                        1000
                      </Label>,
                      <Label>
                        Total Amount: 
                        4000
                         UGX
                      </Label>,
                    ],
                    "width": 4,
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": Array [
                          "Quantity: ",
                          4,
                        ],
                      },
                      "ref": null,
                      "rendered": Array [
                        "Quantity: ",
                        4,
                      ],
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": Array [
                          "Price: ",
                          1000,
                        ],
                      },
                      "ref": null,
                      "rendered": Array [
                        "Price: ",
                        1000,
                      ],
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": Array [
                          "Total Amount: ",
                          4000,
                          " UGX",
                        ],
                      },
                      "ref": null,
                      "rendered": Array [
                        "Total Amount: ",
                        4000,
                        " UGX",
                      ],
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
